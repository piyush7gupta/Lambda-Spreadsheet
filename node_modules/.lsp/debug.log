Hello - from /home/piyush/.vscode/extensions/jaredly.reason-vscode-1.7.8/bin.native.linux
Previous log location: /tmp/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/piyush/Desktop/COL226/Assignment3/2018CS10365_Assignment3/2018CS10365_Assignment4/real_lexer.ml","languageId":"ocaml","version":1,"text":"# 1 \"real_lexer.mll\"\n \n  open Real_parser\n  exception EOF\n  exception Invalid_input\n\n# 8 \"real_lexer.ml\"\nlet __ocaml_lex_tables = {\n  Lexing.lex_base =\n   \"\\000\\000\\224\\255\\225\\255\\226\\255\\000\\000\\229\\255\\230\\255\\231\\255\\\n    \\232\\255\\233\\255\\046\\000\\000\\000\\056\\000\\000\\000\\001\\000\\001\\000\\\n    \\000\\000\\001\\000\\000\\000\\255\\255\\004\\000\\000\\000\\254\\255\\238\\255\\\n    \\038\\000\\050\\000\\000\\000\\004\\000\\253\\255\\051\\000\\003\\000\\005\\000\\\n    \\039\\000\\034\\000\\042\\000\\037\\000\\251\\255\\045\\000\\249\\255\\000\\000\\\n    \\246\\255\\037\\000\\048\\000\\243\\255\\240\\255\\041\\000\\064\\000\\065\\000\\\n    \\046\\000\\049\\000\\056\\000\\051\\000\\059\\000\\055\\000\\252\\255\\063\\000\\\n    \\250\\255\\001\\000\\247\\255\\054\\000\\065\\000\\244\\255\\241\\255\\007\\000\\\n    \\005\\000\\248\\255\\239\\255\\068\\000\\057\\000\\068\\000\\245\\255\\242\\255\\\n    \\064\\000\\237\\255\\063\\000\\236\\255\\102\\000\\112\\000\\122\\000\\227\\255\\\n    \";\n  Lexing.lex_backtrk =\n   \"\\255\\255\\255\\255\\255\\255\\255\\255\\027\\000\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\020\\000\\020\\000\\031\\000\\031\\000\\031\\000\\031\\000\\\n    \\031\\000\\031\\000\\031\\000\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\021\\000\\255\\255\\255\\255\\\n    \";\n  Lexing.lex_default =\n   \"\\001\\000\\000\\000\\000\\000\\000\\000\\255\\255\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\000\\000\\255\\255\\255\\255\\000\\000\\000\\000\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\000\\000\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\000\\000\\255\\255\\000\\000\\255\\255\\\n    \\000\\000\\255\\255\\255\\255\\000\\000\\000\\000\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\000\\000\\255\\255\\\n    \\000\\000\\255\\255\\000\\000\\255\\255\\255\\255\\000\\000\\000\\000\\255\\255\\\n    \\255\\255\\000\\000\\000\\000\\255\\255\\255\\255\\255\\255\\000\\000\\000\\000\\\n    \\255\\255\\000\\000\\255\\255\\000\\000\\255\\255\\255\\255\\255\\255\\000\\000\\\n    \";\n  Lexing.lex_trans =\n   \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\019\\000\\019\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\019\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\009\\000\\008\\000\\000\\000\\012\\000\\005\\000\\012\\000\\076\\000\\000\\000\\\n    \\011\\000\\010\\000\\010\\000\\010\\000\\010\\000\\010\\000\\010\\000\\010\\000\\\n    \\010\\000\\010\\000\\004\\000\\003\\000\\000\\000\\079\\000\\000\\000\\000\\000\\\n    \\000\\000\\015\\000\\068\\000\\017\\000\\013\\000\\063\\000\\021\\000\\040\\000\\\n    \\058\\000\\074\\000\\069\\000\\066\\000\\065\\000\\014\\000\\027\\000\\045\\000\\\n    \\024\\000\\022\\000\\016\\000\\018\\000\\023\\000\\020\\000\\067\\000\\064\\000\\\n    \\028\\000\\039\\000\\037\\000\\007\\000\\076\\000\\006\\000\\010\\000\\010\\000\\\n    \\010\\000\\010\\000\\010\\000\\010\\000\\010\\000\\010\\000\\010\\000\\010\\000\\\n    \\011\\000\\010\\000\\010\\000\\010\\000\\010\\000\\010\\000\\010\\000\\010\\000\\\n    \\010\\000\\010\\000\\025\\000\\030\\000\\041\\000\\032\\000\\033\\000\\034\\000\\\n    \\035\\000\\036\\000\\038\\000\\026\\000\\042\\000\\044\\000\\043\\000\\029\\000\\\n    \\046\\000\\048\\000\\059\\000\\050\\000\\057\\000\\031\\000\\055\\000\\051\\000\\\n    \\052\\000\\053\\000\\060\\000\\054\\000\\056\\000\\047\\000\\062\\000\\061\\000\\\n    \\072\\000\\071\\000\\070\\000\\049\\000\\073\\000\\075\\000\\077\\000\\077\\000\\\n    \\077\\000\\077\\000\\077\\000\\077\\000\\077\\000\\077\\000\\077\\000\\077\\000\\\n    \\078\\000\\077\\000\\077\\000\\077\\000\\077\\000\\077\\000\\077\\000\\077\\000\\\n    \\077\\000\\077\\000\\078\\000\\077\\000\\077\\000\\077\\000\\077\\000\\077\\000\\\n    \\077\\000\\077\\000\\077\\000\\077\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\002\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\";\n  Lexing.lex_check =\n   \"\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\000\\000\\000\\000\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\000\\000\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\000\\000\\000\\000\\255\\255\\000\\000\\000\\000\\000\\000\\011\\000\\255\\255\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\\n    \\000\\000\\000\\000\\000\\000\\000\\000\\255\\255\\004\\000\\255\\255\\255\\255\\\n    \\255\\255\\000\\000\\014\\000\\000\\000\\000\\000\\015\\000\\020\\000\\039\\000\\\n    \\057\\000\\013\\000\\014\\000\\063\\000\\064\\000\\000\\000\\026\\000\\016\\000\\\n    \\017\\000\\020\\000\\000\\000\\000\\000\\021\\000\\018\\000\\014\\000\\015\\000\\\n    \\027\\000\\030\\000\\031\\000\\000\\000\\010\\000\\000\\000\\010\\000\\010\\000\\\n    \\010\\000\\010\\000\\010\\000\\010\\000\\010\\000\\010\\000\\010\\000\\010\\000\\\n    \\012\\000\\012\\000\\012\\000\\012\\000\\012\\000\\012\\000\\012\\000\\012\\000\\\n    \\012\\000\\012\\000\\024\\000\\025\\000\\029\\000\\025\\000\\032\\000\\033\\000\\\n    \\034\\000\\035\\000\\037\\000\\024\\000\\029\\000\\041\\000\\042\\000\\025\\000\\\n    \\045\\000\\046\\000\\047\\000\\046\\000\\048\\000\\025\\000\\049\\000\\050\\000\\\n    \\051\\000\\052\\000\\047\\000\\053\\000\\055\\000\\046\\000\\059\\000\\060\\000\\\n    \\067\\000\\068\\000\\069\\000\\046\\000\\072\\000\\074\\000\\076\\000\\076\\000\\\n    \\076\\000\\076\\000\\076\\000\\076\\000\\076\\000\\076\\000\\076\\000\\076\\000\\\n    \\077\\000\\077\\000\\077\\000\\077\\000\\077\\000\\077\\000\\077\\000\\077\\000\\\n    \\077\\000\\077\\000\\078\\000\\078\\000\\078\\000\\078\\000\\078\\000\\078\\000\\\n    \\078\\000\\078\\000\\078\\000\\078\\000\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\000\\000\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\255\\\n    \\255\\255\\255\\255\\255\\255\";\n  Lexing.lex_base_code =\n   \"\";\n  Lexing.lex_backtrk_code =\n   \"\";\n  Lexing.lex_default_code =\n   \"\";\n  Lexing.lex_trans_code =\n   \"\";\n  Lexing.lex_check_code =\n   \"\";\n  Lexing.lex_code =\n   \"\";\n}\n\nlet rec token lexbuf =\n   __ocaml_lex_token_rec lexbuf 0\nand __ocaml_lex_token_rec lexbuf __ocaml_lex_state =\n  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with\n      | 0 ->\n# 7 \"real_lexer.mll\"\n                   (token lexbuf)\n# 165 \"real_lexer.ml\"\n\n  | 1 ->\n# 8 \"real_lexer.mll\"\n            (SUM)\n# 170 \"real_lexer.ml\"\n\n  | 2 ->\n# 9 \"real_lexer.mll\"\n            (COUNT)\n# 175 \"real_lexer.ml\"\n\n  | 3 ->\n# 10 \"real_lexer.mll\"\n                (ROWCOUNT)\n# 180 \"real_lexer.ml\"\n\n  | 4 ->\n# 11 \"real_lexer.mll\"\n                (COLCOUNT)\n# 185 \"real_lexer.ml\"\n\n  | 5 ->\n# 12 \"real_lexer.mll\"\n                (ROWSUM)\n# 190 \"real_lexer.ml\"\n\n  | 6 ->\n# 13 \"real_lexer.mll\"\n                (COLSUM)\n# 195 \"real_lexer.ml\"\n\n  | 7 ->\n# 14 \"real_lexer.mll\"\n                (AVG)\n# 200 \"real_lexer.ml\"\n\n  | 8 ->\n# 15 \"real_lexer.mll\"\n                (ROWAVG)\n# 205 \"real_lexer.ml\"\n\n  | 9 ->\n# 16 \"real_lexer.mll\"\n                (COLAVG)\n# 210 \"real_lexer.ml\"\n\n  | 10 ->\n# 17 \"real_lexer.mll\"\n                (MIN)\n# 215 \"real_lexer.ml\"\n\n  | 11 ->\n# 18 \"real_lexer.mll\"\n                (ROWMIN)\n# 220 \"real_lexer.ml\"\n\n  | 12 ->\n# 19 \"real_lexer.mll\"\n                (COLMIN)\n# 225 \"real_lexer.ml\"\n\n  | 13 ->\n# 20 \"real_lexer.mll\"\n                (MAX)\n# 230 \"real_lexer.ml\"\n\n  | 14 ->\n# 21 \"real_lexer.mll\"\n                (ROWMAX)\n# 235 \"real_lexer.ml\"\n\n  | 15 ->\n# 22 \"real_lexer.mll\"\n                (COLMAX)\n# 240 \"real_lexer.ml\"\n\n  | 16 ->\n# 23 \"real_lexer.mll\"\n                (ADD)\n# 245 \"real_lexer.ml\"\n\n  | 17 ->\n# 24 \"real_lexer.mll\"\n                (SUBT)\n# 250 \"real_lexer.ml\"\n\n  | 18 ->\n# 25 \"real_lexer.mll\"\n                (MULT)\n# 255 \"real_lexer.ml\"\n\n  | 19 ->\n# 26 \"real_lexer.mll\"\n                (DIV)\n# 260 \"real_lexer.ml\"\n\n  | 20 ->\nlet\n# 27 \"real_lexer.mll\"\n                                                    lexm\n# 266 \"real_lexer.ml\"\n= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in\n# 27 \"real_lexer.mll\"\n                                                         (INTEGER(int_of_string lexm))\n# 270 \"real_lexer.ml\"\n\n  | 21 ->\nlet\n# 28 \"real_lexer.mll\"\n                                                                                            lexm\n# 276 \"real_lexer.ml\"\n= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in\n# 28 \"real_lexer.mll\"\n                                                                                                 (FLOAT(float_of_string lexm))\n# 280 \"real_lexer.ml\"\n\n  | 22 ->\n# 29 \"real_lexer.mll\"\n                (L_PAREN)\n# 285 \"real_lexer.ml\"\n\n  | 23 ->\n# 30 \"real_lexer.mll\"\n                (R_PAREN)\n# 290 \"real_lexer.ml\"\n\n  | 24 ->\n# 31 \"real_lexer.mll\"\n                (L_BRAC)\n# 295 \"real_lexer.ml\"\n\n  | 25 ->\n# 32 \"real_lexer.mll\"\n                (R_BRAC)\n# 300 \"real_lexer.ml\"\n\n  | 26 ->\n# 33 \"real_lexer.mll\"\n                (COMMA)\n# 305 \"real_lexer.ml\"\n\n  | 27 ->\n# 34 \"real_lexer.mll\"\n                (COLON)\n# 310 \"real_lexer.ml\"\n\n  | 28 ->\n# 35 \"real_lexer.mll\"\n                (ASSIGNMENT)\n# 315 \"real_lexer.ml\"\n\n  | 29 ->\n# 36 \"real_lexer.mll\"\n                (SEMICOLON)\n# 320 \"real_lexer.ml\"\n\n  | 30 ->\n# 37 \"real_lexer.mll\"\n                (raise EOF)\n# 325 \"real_lexer.ml\"\n\n  | 31 ->\n# 38 \"real_lexer.mll\"\n                (raise Invalid_input)\n# 330 \"real_lexer.ml\"\n\n  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;\n      __ocaml_lex_token_rec lexbuf __ocaml_lex_state\n\n;;\n\n"}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/piyush/Desktop/COL226/Assignment3/2018CS10365_Assignment3/2018CS10365_Assignment4/real_lexer.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00596046447754ms
Sending response {"id": 1, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/piyush/Desktop/COL226/Assignment3/2018CS10365_Assignment3/2018CS10365_Assignment4/real_lexer.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 2, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/piyush/Desktop/COL226/Assignment3/2018CS10365_Assignment3/2018CS10365_Assignment4/real_lexer.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00905990600586ms
Sending response {"id": 3, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/piyush/Desktop/COL226/Assignment3/2018CS10365_Assignment3/2018CS10365_Assignment4/real_lexer.ml"}}}
